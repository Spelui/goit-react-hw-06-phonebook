{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/App/App.module.scss","redux/contacts/contactsSlice.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","services/localStorage.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","conatactsSlice","createSlice","name","initialState","items","id","number","filter","reducers","setContacts","state","action","payload","addContacts","deleteContact","contact","chengeFilter","actions","ContactForm","onSubmit","useState","setName","setNumber","hendleChange","key","value","e","preventDefault","className","s","form","label","label__input","onChange","target","type","pattern","title","required","ContactList","filterContactsList","onClickDel","contacts__list","map","contacts__item","contacts__text","onClick","Filter","onChangeValue","filter__search","filter__input","App","contacts","useSelector","dispatch","useDispatch","console","log","useEffect","savedContacts","JSON","parse","localStorage","getItem","error","storage","contactsActions","filterResult","normalizeFilter","toLowerCase","includes","filteredContact","container","newName","nanoid","some","alert","persistContactsConfig","whitelist","store","configureStore","reducer","persistReducer","conatactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e8284dad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__18Njq\",\"contacts__item\":\"ContactList_contacts__item__3N6li\",\"contacts__text\":\"ContactList_contacts__text__2L7W2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3fNxG\",\"filter__search\":\"Filter_filter__search__2mEsF\",\"filter__input\":\"Filter_filter__input__16xpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3UpPe\",\"title\":\"App_title__M1Kzq\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  filter: \"\",\r\n};\r\n\r\nconst conatactsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState,\r\n  reducers: {\r\n    setContacts: (state, action) => ({ ...state, items: [action.payload] }),\r\n    addContacts: (state, action) => ({\r\n      ...state,\r\n      items: [action.payload, ...state.items],\r\n    }),\r\n    deleteContact: (state, action) => ({\r\n      ...state,\r\n      items: state.items.filter((contact) => contact.id !== action.payload),\r\n    }),\r\n    chengeFilter: (state, action) => ({ ...state, filter: action.payload }),\r\n  },\r\n});\r\n\r\nexport const { setContacts, addContacts, deleteContact, chengeFilter } =\r\n  conatactsSlice.actions;\r\n\r\nexport default conatactsSlice.reducer;\r\n","import { useState } from \"react\";\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const hendleChange = (key, value) => {\r\n    if (key === \"name\") {\r\n      setName(value);\r\n    }\r\n    if (key === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.label__input}\r\n          onChange={(e) => hendleChange(e.target.name, e.target.value)}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.label__input}\r\n          onChange={(e) => hendleChange(e.target.name, e.target.value)}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className=\"btn\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = ({ filterContactsList, onClickDel }) => {\r\n  return (\r\n    <ul className={s.contacts__list}>\r\n      {filterContactsList.map(({ name, number, id }) => (\r\n        <li key={id} className={s.contacts__item}>\r\n          <p className={s.contacts__text}>\r\n            {name}: <span>{number}</span>\r\n          </p>\r\n          <button className=\"btn\" onClick={() => onClickDel(id)} type=\"button\">\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filterContactsList: PropTypes.array,\r\n  onClickDel: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ onChangeValue, filter }) => {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.filter__search}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filter__input}\r\n          onChange={onChangeValue}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeValue: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"nanoid\";\r\nimport * as contactsActions from \"../../redux/contacts/contactsSlice\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport * as storage from \"../../services/localStorage\";\r\nimport s from \"./App.module.scss\";\r\n\r\nconst STORAGE_KEY = \"contacts\";\r\n\r\nconst App = () => {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  console.log(contacts);\r\n\r\n  useEffect(() => {\r\n    const savedContacts = storage.get(STORAGE_KEY);\r\n    if (savedContacts) {\r\n      dispatch(contactsActions.setContacts(savedContacts));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const onSubmitName = ({ name, number }) => {\r\n    const newName = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const compareContact = contacts.some(\r\n      (contact) => contact.name?.toLowerCase() === newName.name.toLowerCase()\r\n    );\r\n    if (compareContact) {\r\n      return alert(`${name} is alredy in contacts`);\r\n    }\r\n\r\n    dispatch(contactsActions.addContacts(newName));\r\n    // setContacts([newName, ...contacts]);\r\n  };\r\n\r\n  const filteredContact = () => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name?.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  const filterResult = filteredContact();\r\n\r\n  const onFilterValueChange = (e) =>\r\n    dispatch(contactsActions.chengeFilter(e.target.value));\r\n\r\n  const deleteContact = (id) => dispatch(contactsActions.deleteContact(id));\r\n\r\n  return (\r\n    <main>\r\n      <section>\r\n        <div className={s.container}>\r\n          <h1 className={s.title}>Phonebook</h1>\r\n\r\n          <ContactForm onSubmit={onSubmitName} />\r\n\r\n          <h2 className={s.title}>Contacts</h2>\r\n\r\n          <Filter onChangeValue={onFilterValueChange} filter={filter} />\r\n\r\n          <ContactList\r\n            filterContactsList={filterResult}\r\n            onClickDel={deleteContact}\r\n          />\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport conatactsReducer from \"./contacts/contactsSlice\";\r\n\r\nconst persistContactsConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  whitelist: [\"items\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistContactsConfig, conatactsReducer),\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n//////////////////////////////////////////////\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     tutors: tutorsReducer,\r\n//     cities: persistReducer(persistCitiesConfig, citiesReducer),\r\n//     departments: () => [],\r\n//   },\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }).concat(logger),\r\n//   devTools: process.env.NODE_ENV !== \"production\",\r\n// });\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { store,persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2_dN7\",\"label\":\"ContactForm_label__3j3WS\",\"label__input\":\"ContactForm_label__input__2pogS\"};"],"sourceRoot":""}